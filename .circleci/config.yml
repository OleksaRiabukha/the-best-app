version: 2.1
jobs:
  setup:
    parameters:
    docker:
      - image: circleci/ruby:3.0.1-node
    steps:
      - run:
          command: |
            echo 'export POSTGRES_HOST=${localhost}' >> $BASH_ENV
            echo 'export POSTGRES_USER=${postgres}' >> $BASH_ENV
            echo 'export POSTGRES_DB=${the_best_app_test}' >> $BASH_ENV
            echo 'export POSTGRES_PASSWORD=${password}' >> $BASH_ENV
            echo 'export DATABASE_URL=${postgresql://postgres:secret@localhost:5432}' >> $BASH_ENV
            source $BASH_ENV

      - checkout

      - run: gem update --system
      - run: gem install bundler

      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - yarn-{{ checksum "yarn.lock" }}
      - run: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run: bundle exec rails webpacker:compile
      - save_cache:
          key: webpack-{{ .Revision }}
          paths:
            - /home/circleci/project/public/packs-test/
  test:
    docker:
      - image: circleci/ruby:3.0.1-node
      - image: circleci/postgres:12.7
    parallelism: 2
    steps:
      - checkout
      - restore_cache:
          keys:
            - webpack-{{ .Revision }}
      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
      - run: gem update --system
      - run: gem install bundler
      - run: bundle install --path vendor/bundle
      - run: sudo apt install postgresql-client
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: bundle exec rails db:create
      - run: bundle exec rails db:schema:load
      - run:
          name: Specs
          command: |
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            echo $TESTFILES
            bundle exec rspec ${TESTFILES} --profile 10 --format RspecJunitFormatter --out ~/spec-timings/rspec.xml --format progress
      - store_test_results:
          path: ~/spec-timings
workflows:
  version: 2.1
  setup_and_test:
    jobs:
      - setup
      - test:
          requires:
            - setup
